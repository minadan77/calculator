document.addEventListener("DOMContentLoaded", () => {
    const tabs = document.querySelectorAll("nav button");
    const tabContents = document.querySelectorAll(".tab-content");

    function showTab(target) {
        tabContents.forEach(tc => {
            tc.classList.remove("active");
        });
        document.getElementById(target).classList.add("active");
    }

    tabs.forEach(tab => {
        tab.addEventListener("click", () => {
            const target = tab.dataset.tab;
            showTab(target);
        });
    });

    // Show the calculator tab by default
    showTab("calculator");

    // Calculator functionality
    const calcDisplay = document.getElementById("calc-display");
    const calcButtons = document.querySelectorAll("#calc-buttons button");
    let calcValue = "";

    function calculateExpression(expression) {
        try {
            return new Function('return ' + expression)();
        } catch (e) {
            return "Error";
        }
    }

    calcButtons.forEach(button => {
        button.addEventListener("click", () => {
            const value = button.textContent;
            if (value === "=") {
                calcDisplay.textContent = calculateExpression(calcValue);
                calcValue = "";
            } else if (value === "C") {
                calcValue = "";
                calcDisplay.textContent = "0";
            } else {
                calcValue += value;
                calcDisplay.textContent = calcValue;
            }
        });
    });

    // Percentage functionality
    const percentInput = document.getElementById("percent-input");
    const percentValue = document.getElementById("percent-value");
    const percentResult = document.getElementById("percent-result");

    document.getElementById("percent-add").addEventListener("click", () => {
        const input = parseFloat(percentInput.value);
        const value = parseFloat(percentValue.value);
        if (!isNaN(input) && !isNaN(value)) {
            percentResult.textContent = input + (input * (value / 100));
        } else {
            percentResult.textContent = "Por favor, ingrese números válidos.";
        }
    });

    document.getElementById("percent-subtract").addEventListener("click", () => {
        const input = parseFloat(percentInput.value);
        const value = parseFloat(percentValue.value);
        if (!isNaN(input) && !isNaN(value)) {
            percentResult.textContent = input - (input * (value / 100));
        } else {
            percentResult.textContent = "Por favor, ingrese números válidos.";
        }
    });

    // Rule of three functionality
    document.getElementById("calculate-r3").addEventListener("click", () => {
        const a = parseFloat(document.getElementById("a").value);
        const aPercent = parseFloat(document.getElementById("a-percent").value);
        const b = parseFloat(document.getElementById("b").value);
        const bPercent = parseFloat(document.getElementById("b-percent").value);
        const r3Result = document.getElementById("r3-result");

        if (!isNaN(a) && !isNaN(aPercent)) {
            if (isNaN(b) && !isNaN(bPercent)) {
                r3Result.textContent = (a * bPercent) / aPercent;
            } else if (!isNaN(b) && isNaN(bPercent)) {
                r3Result.textContent = (b * aPercent) / a;
            } else {
                r3Result.textContent = "Por favor, complete los valores.";
            }
        } else {
            r3Result.textContent = "Por favor, ingrese números válidos.";
        }
    });

    // Conversion functionality
    const convertInput = document.getElementById("convert-input");
    const convertFrom = document.getElementById("convert-from");
    const conversionResult = document.getElementById("conversion-result");

    document.getElementById("convert").addEventListener("click", () => {
        const value = parseFloat(convertInput.value);
        if (isNaN(value)) {
            conversionResult.textContent = "Por favor, ingrese un número válido.";
            return;
        }
        switch (convertFrom.value) {
            case "km-miles":
                conversionResult.textContent = (value * 0.621371).toFixed(2) + " Millas";
                break;
            case "ha-km2":
                conversionResult.textContent = (value * 0.01).toFixed(2) + " Km2";
                break;
            case "lb-kg":
                conversionResult.textContent = (value * 0.453592).toFixed(2) + " Kilos";
                break;
            case "knots-kmh":
                conversionResult.textContent = (value * 1.852).toFixed(2) + " Km/h";
                break;
            default:
                conversionResult.textContent = "Conversión no válida.";
        }
    });
});
